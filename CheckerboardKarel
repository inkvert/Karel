from karel.stanfordkarel import *

def main():
    """
    Creates a checkerboard pattern of beepers in any size world.
    Current bugs:
    1): On even worlds, an additional beeper is wrongly placed at the end.
    2): On odd worlds, Karel crashes on a move(). Adding front_is_blocked makes it loop infinitely.

    """
    while front_is_clear():
        loop_put_and_move()

def loop_put_and_move():
    #Creates a while loop for put_and_move which includes a fencepost fix for odd worlds.
    while front_is_clear():
        put_and_move()
    if front_is_blocked():
        put_and_move()

def put_and_move():
    #Karel puts a beeper and moves, before detecting a wall and subsequently turning the corner.
    if no_beepers_present():
        put_beeper()
    if front_is_clear():
        move()
    else:
        turn_left()
        move()
        turn_left()
    if front_is_clear():
        move()
    else:
        turn_left()
        move()
        turn_left()
    if beepers_present():
        turn_left()
        if front_is_clear():
            move()
        if front_is_clear():
            move()
            turn_right()

def turn_right():
    #Karel can only turn left, so this fabricates a right turn by turning left three times.
    for i in range(3):
        turn_left()

# don't change this code
if __name__ == '__main__':
    main()
